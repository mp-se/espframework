; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common_env_data]
upload_speed = 921600
monitor_speed = 115200
board_build.filesystem = littlefs
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	-D USE_LITTLEFS=true
	-D LOG_LEVEL=5
	#-D PERF_ENABLE
	-D PERF_INFLUX_TARGET=\""\""
	-D PERF_INFLUX_BUCKET=\""\""
	-D PERF_INFLUX_ORG=\""\""
	-D PERF_INFLUX_TOKEN=\""\""
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
lib_deps = 
	https://github.com/mp-se/Arduino-Log#1.1.1
	https://github.com/mp-se/ArduinoJson#v6.21.3
	https://github.com/mp-se/arduino-mqtt#v2.5.1
html_files =
	html/upload.min.htm
	html/config.min.htm
	html/about.min.htm
	html/index.min.htm
	html/test.min.htm
	html/ws.min.htm

[env:esplib-debug]
platform = espressif8266 @ 4.2.1
board = d1_mini
framework = arduino
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
build_flags = ${common_env_data.build_flags}
lib_deps = 
	https://github.com/mp-se/incbin#v1.0.0
	${common_env_data.lib_deps}
 build_type = debug
monitor_filters = esp8266_exception_decoder

[env:esplibasync-debug]
platform = espressif8266 @ 4.2.1
board = d1_mini
framework = arduino
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = 
	-D PERF_ENABLE
	${common_env_data.build_unflags}
build_flags = 
	-D USE_ASYNC_WEB
	${common_env_data.build_flags}
lib_deps = 
	https://github.com/mp-se/incbin#v1.0.0
	https://github.com/mp-se/ESPAsyncWebServer
	https://github.com/mp-se/ESPAsyncTCP
	${common_env_data.lib_deps}
build_type = release
monitor_filters = esp8266_exception_decoder

[env:esplib32-debug]
platform = espressif32 @ 6.3.2
framework = arduino
board = featheresp32
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	-D CORE_DEBUG_LEVEL=0
	# -D USE_SERIAL_PINS
  ${common_env_data.build_flags}
lib_deps = ${common_env_data.lib_deps}
build_type = debug
monitor_filters = esp32_exception_decoder
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:esplib32-c3-debug]
platform = espressif32 @ 6.3.2
framework = arduino
board = lolin_c3_mini
debug_tool = custom
debug_server = 
	${platformio.packages_dir}/tool-openocd-esp32/bin/openocd 
	-f 
	${platformio.packages_dir}/tool-openocd-esp32/share/openocd/scripts/board/esp32c3-builtin.cfg
debug_port = localhost:3333
debug_init_break = break setup
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	-D CORE_DEBUG_LEVEL=0
	-D ESP32C3
	-D ARDUINO_ESP32C3_DEV
	-D USE_SERIAL_PINS	
	${common_env_data.build_flags}
lib_deps = ${common_env_data.lib_deps}
build_type = debug
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:esplib32-s2-debug]
platform = espressif32 @ 6.3.2
framework = arduino
board = lolin_s2_mini
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	-D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	#-D USE_SERIAL_PINS
	${common_env_data.build_flags}
lib_deps =  ${common_env_data.lib_deps}
build_type = debug
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:esplib32async-s2-debug]
platform = espressif32 @ 6.3.2
framework = arduino
board = lolin_s2_mini
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
  -D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	# -D USE_SERIAL_PINS
	-D USE_ASYNC_WEB
  ${common_env_data.build_flags}
lib_deps = 
	https://github.com/mp-se/ESPAsyncWebServer
	https://github.com/mp-se/AsyncTCP
	${common_env_data.lib_deps}
build_type = debug
board_build.partitions = partitions.csv
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:esplib32async-wokwi]
platform = espressif32 @ 6.3.2
framework = arduino
board = esp32dev
board_build.filesystem = ${common_env_data.board_build.filesystem}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = ${common_env_data.build_unflags}
extra_scripts = script/merge_firmware.py
build_flags = 
	-D ESP32
	-D USE_SERIAL_PINS
	-D USE_ASYNC_WEB
	${common_env_data.build_flags}
lib_deps = 
	https://github.com/mp-se/ESPAsyncWebServer
	https://github.com/mp-se/AsyncTCP
	${common_env_data.lib_deps}
build_type = debug
board_build.partitions = partitions.csv
board_build.embed_txtfiles = ${common_env_data.html_files}
